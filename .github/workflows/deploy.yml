name: Deploy to Kubernetes Cluster

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest  # GitHub-hosted runner
    steps:
      # Check out the code
      - name: Check out the repository
        uses: actions/checkout@v2

      # Install k3d
      - name: Install k3d
        run: |
          curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

      # Create a k3d cluster
      - name: Create k3d cluster
        run: |
          k3d cluster create mc-cluster --api-port 6550 -p "80:80@loadbalancer" --agents 2

      # Wait for cluster to be ready
      - name: Wait for Kubernetes cluster
        run: |
          kubectl wait --for=condition=ready pod -n kube-system --all --timeout=120s

      # Set up kubectl (already available in GitHub runner)
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      # Deploy to the cluster
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/namespace.yml
          kubectl apply -f kubernetes/backend-deployment.yml
          kubectl apply -f kubernetes/frontend-deployment.yml
          kubectl apply -f kubernetes/postgres-statefulset.yml
          kubectl apply -f kubernetes/ingress.yml
          kubectl apply -f kubernetes/secret.yml

      # Optionally, wait for the deployment to be ready
      - name: Wait for Deployment
        run: |
          kubectl rollout status deployment/backend-deployment -n mc-namespace
          kubectl rollout status deployment/frontend-deployment -n mc-namespace
